# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '1Basic\PipelinesSolution.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
- powershell: dir -s

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\1Basic\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
- powershell: dir $(Build.SourcesDirectory)/1Basic -s


- task: SqlDacpacDeploymentOnMachineGroup@0
  inputs:
    TaskType: 'dacpac'
    DacpacFile: '$(build.artifactStagingDirectory)\1Basic\SchoolProject\bin\Release\SchoolProject.dacpac'
    TargetMethod: 'server'
    ServerName: 'localhost'
    DatabaseName: 'SchoolProjectDB'
    AuthScheme: 'windowsAuthentication'
- task: CmdLine@2
  inputs:
    script: 'sqlcmd -S localhost -d SchoolProjectDB -U sa -P Password123 -Q "SELECT @@version;"'


- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/TEST-*.xml'
    mergeTestResults: true
#    failTaskOnFailedTests: true
- task: PublishBuildArtifacts@1
  displayName: PublishDatabase
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/1Basic/SchoolProject/bin/Release/'
    ArtifactName: 'SchoolProjectDB'
    publishLocation: 'Container'

    