# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
resources:
  containers:
  - container: mssql
    image: mcr.microsoft.com/mssql/server:2017-latest
    env:
      ACCEPT_EULA: Y
      SA_PASSWORD: $(saPassword)
      MSSQL_PID: Express
    ports: 
      - 1433:1433
    options: --name mssql
  pipelines:
    - pipeline: 1Basic
      source: SQLPioneer.PipelineDemo.1Basic

trigger:
  paths:
    include:
      - 2Container/*
    exclude:
      - 1Basic/*

stages:
- stage: deployToContainer
  jobs:
  - job: unit_test_db_mssql
    # condition: eq('${{ variables.runDbTests }}', 'true')
    continueOnError: true
    pool:
      vmImage: 'ubuntu-latest'
    services:
      mssql: mssql
    steps:
    - download: 1Basic
    - task: Bash@3
      displayName: "List Environment Variables"
      inputs:
        targetType: 'inline'
        script: |
          wget -progress=bar:force -q -O sqlpackage.zip https://go.microsoft.com/fwlink/?linkid=873926
          unzip -qq sqlpackage.zip -d /opt/sqlpackage 
          chmod +x /opt/sqlpackage/sqlpackage
    - task: PowerShell@2
      displayName: 'Sleep'
      inputs:
        targetType: 'inline'
        script: |
          start-sleep -s 60
    - task: Bash@3
      displayName: "List Environment Variables"
      inputs:
        targetType: 'inline'
        script: 'env | sort'
    - task: CmdLine@2
      displayName: "List docker images"
      inputs:
        script: 'docker ps -all'
    - task: CmdLine@2
      displayName: "Show docker logs"
      inputs:
        script: 'docker logs mssql'
    - task: CmdLine@2
      displayName: "Connect to SQLServer and Query version" 
      inputs:
        script: 'sqlcmd -S localhost -d master -U sa -P $(saPassword) -Q "SELECT @@version;"'

